9. Palindrome Number (Topics: Math)

Given an integer x, return true if x is a palindrome, and false otherwise.


Example 1:
Input: x = 121
Output: true
Explanation: 121 reads as 121 from left to right and from right to left.

Example 2:
Input: x = -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.

Example 3:
Input: x = 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
 

Constraints:
-2^31 <= x <= 2^31 - 1
 

Follow up: Could you solve it without converting the integer to a string?

----------------------

Clarifying Questions/Callouts/Notes: ?

----------------------

Additional Test Cases / Edge Cases:

Input: x = 0
Expected: true

----------------------

// Swift:
class Solution {
    func isPalindrome(_ x: Int) -> Bool {
        return String(String(x).reversed()) == String(x)
    }
}

- OR - Satisfies follow up

class Solution {
    func isPalindrome(_ x: Int) -> Bool {
        guard x >= 0 else { return false }

        let xArr = Array(String(x))
        let lenXarr = xArr.count

        for i in 0..<(lenXarr/2) {
            if xArr[i] != xArr[lenXarr-i-1] {
                return false
            }
        }
        return true
    }
}
