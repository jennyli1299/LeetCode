217. Contains Duplicate (Topics: Array, Hash Table, Sorting)

Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.


Example 1:
Input: nums = [1,2,3,1]
Output: true

Example 2:
Input: nums = [1,2,3,4]
Output: false

Example 3:
Input: nums = [1,1,1,3,3,4,3,2,4,2]
Output: true
 

Constraints:
1 <= nums.length <= 10^5
-10^9 <= nums[i] <= 10^9

----------------------

Clarifying Questions/Callouts/Notes: ?

----------------------

Additional Test Cases / Edge Cases:

Input: nums = [1,1,2,3]
Expected: true

Input: nums = [3,3,4,4]
Expected: true

Input: nums = [11,3,109]
Expected: false

----------------------

// Swift:
class Solution {
    func containsDuplicate(_ nums: [Int]) -> Bool {
        // edge case nums.isEmpty == true => cannot be duplicate
        if nums.isEmpty { 
            return false 
        }

        // trivial case nums.count == 1 => only one element => nums must be distinct
        if nums.count == 1 {
            return false
        }

        // Set<Int>()
        var distinctElements = Set<Int>()

        // iterate over nums
        for num in nums {
            // check if each num is found in Set
            if distinctElements.contains(num){
                // if so -> we found duplicate => return true
                return true
            } else { // else, add num to set
                distinctElements.insert(num)
            }
        }

        // if we successful complete the iteration over entire array nums
        // it means there were no duplicates & every element is distinct => return false
        return false
    }
}
