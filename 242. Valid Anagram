242. Valid Anagram (Topics: String, Hash Table, Sorting)

Given two strings s and t, return true if t is an anagram of s, and false otherwise.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. 


Example 1:
Input: s = "anagram", t = "nagaram"
Output: true

Example 2:
Input: s = "rat", t = "car"
Output: false


Constraints:
1 <= s.length, t.length <= 5 * 10^4
s and t consist of lowercase English letters.

----------------------

Clarifying Questions/Callouts/Notes: Does case/casing matter?

----------------------

Additional Test Cases / Edge Cases: 

Input: s = "anagram", t = "nagaram"
Expected: true

----------------------

Swift:
class Solution {
    func isAnagram(_ s: String, _ t: String) -> Bool {
        guard s.count == t.count else { return false }

        var letterBank = Dictionary<Character, Int>()

        for char in s {
            if let count = letterBank[char] {
                letterBank[char] = count + 1
            } else {
                letterBank[char] = 1
            }
        }

        for char in t {
            guard let count = letterBank[char], count > 0 else { return false }
            letterBank[char] = count - 1
        }

        return true
    }
}
